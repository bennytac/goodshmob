---
format_version: '4'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: react-native
workflows:
  _prepare:
    steps:
    - activate-ssh-key@3.1.1:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone: {}
    - slack@2.6.3:
        inputs:
        - message: Building [$BITRISE_GIT_BRANCH]... $GIT_CLONE_COMMIT_MESSAGE_SUBJECT
        - webhook_url: "$SLACK_WEBHOOK_URL"
    - git-clone:
        run_if: true
        inputs:
        - repository_url: git@github.com:goodshopping/goodshmob-build
        - clone_into_dir: "./goodshmob-build"
        - branch: master
        - commit: ''
    - script@1.1.5:
        title: Prepare environment
        inputs:
        - content: |2-

            #!/usr/bin/env bash
            set -ex
            ./goodshmob-build/prepare-env.sh
    - script@1.1.5:
        title: Resolve new version
        inputs:
        - content: |2-
            #!/usr/bin/env bash
            set -ex
            
            if [ ! -d "goodshmob-version" ] ; then
              git clone git@github.com:goodshopping/goodshmob-version
            else
                cd goodshmob-version && git pull origin master && cd -
            fi
            cd goodshmob-version

            _version=$(./script.sh resolveNextVersion -b $GOODSH_BUILD_BRANCH)
            envman add --key GOODSH_BUILD_VERSION --value $_version

            if [ -z ${_version+x} ];
            then
                echo "cannot find resolve next version"
                exit 1
            fi

            echo build version:$_version

            ./script.sh setBuildStatus -b $GOODSH_BUILD_BRANCH -c $GOODSH_BUILD_COMMIT_SHA1 -v $_version -i $GOODSH_BUILD_ID -s building

            git add build.history
            git commit -m "increase history: -b $GOODSH_BUILD_BRANCH -c $GOODSH_BUILD_COMMIT_SHA1 -v $_version -i $GOODSH_BUILD_ID -s building"
            git push

    - script@1.1.5:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            if [ ! -f .env ]; then
                echo "creating .env file"
                cp $GOODSH_BUILD_REACT_NATIVE_ENV_FILE .env

                echo "BUILD_APP_VERSION=$GOODSH_BUILD_VERSION" >> .env
                echo "BUILD_COMMIT_SHA1=$GOODSH_BUILD_COMMIT_SHA1" >> .env
                echo "BUILD_BRANCH=$GOODSH_BUILD_BRANCH" >> .env
                echo "BUILD_ID=$BUILD_ID" >> .env
                echo "BUILD_DATE=$(date)" >> .env
            fi
    - install-react-native@0.9.1: {}
    - yarn@0.0.4: {}

  _prepare-android:
    steps:
    - git-clone:
        run_if: true
        inputs:
        - repository_url: git@github.com:goodshopping/goodshmob-keystores
        - clone_into_dir: "./android/keystores"
        - branch: master
        - commit: ''
    - install-missing-android-tools: {}
  _deploy-android:
    steps:
    - hockeyapp-deploy-android:
        run_if: '{{enveq "GOODSH_BUILD_HOCKEY_APP_DEPLOY" "true"}}'
        inputs:
        - app_id: "$GOODSH_BUILD_HOCKEY_APP_APP_ID"
        - api_token: "$HOCKEY_APP_API_TOKEN"
        - notify: '0'
        - notes: "$GIT_CLONE_COMMIT_MESSAGE_SUBJECT"
  _build-android:
    steps:
    - set-android-manifest-versions@1.0.5:
        run_if: 'true'
        inputs:
        - manifest_file: "$BITRISE_SOURCE_DIR/android/app/src/main/AndroidManifest.xml"
        - version_name: '$GOODSH_BUILD_VERSION'
        - version_code: '$GOODSH_BUILD_VERSION'
    - gradle-runner@1.8.0:
        inputs:
        - gradle_file: "$GRADLE_BUILD_FILE_PATH"
        - gradle_task: "$GOODSH_BUILD_GRALDE_TASK"
        - apk_file_include_filter: "$GOODSH_BUILD_APK_FILE_INCLUDE_FILTER"
        - gradlew_path: "$GRADLEW_PATH"
  _prepare-ios:
    steps:
    - fastlane-match@0.1.0:
        inputs:
        - git_url: git@github.com:goodshopping/ios-certs
        - app_id: "$GOODSH_BUILD_IOS_APP_ID"
        - decrypt_password: "$CERTS_DECRYPT"
        - type: development
    - recreate-user-schemes@1.0.2:
        inputs:
        - project_path: "$BITRISE_PROJECT_PATH"
    - cocoapods-install@1.7.2: {}
  _build-ios:
    steps:
    - set-xcode-build-number@1.0.5:
        run_if: 'true'
        inputs:
        - plist_path: "$BITRISE_SOURCE_DIR/ios/goodshmob/Info.plist"
        - build_version: '$GOODSH_BUILD_VERSION'
        - build_short_version_string: '$GOODSH_BUILD_VERSION'
    - xcode-archive:
        inputs:
        - export_method: development
        - scheme: "$BITRISE_SCHEME"
        - configuration: "$GOODSH_BUILD_IOS_CONFIGURATION"
        - project_path: "$BITRISE_WORKSPACE_PATH"
        - output_tool: xcodebuild

  _deploy-ios:
    steps:
    - hockeyapp-deploy@2.4.2:
        run_if: '{{enveq "GOODSH_BUILD_HOCKEY_APP_DEPLOY" "true"}}'
        inputs:
        - api_token: "$HOCKEY_APP_API_TOKEN"
        - app_id: "$GOODSH_BUILD_HOCKEY_APP_IOS_APP_ID"
        - notify: '0'
        - notes: "$GIT_CLONE_COMMIT_MESSAGE_SUBJECT"

  _add_version:
    steps:
    - script@1.1.5:
        inputs:
        - content: |2-
            #!/usr/bin/env bash
            set -e
            
            if [ ! -d "goodshmob-version" ] ; then
              git clone git@github.com:goodshopping/goodshmob-version
            else
                cd goodshmob-version && git pull origin master && cd -
            fi
            cd goodshmob-version

            if [ $BITRISE_BUILD_STATUS == "0" ] ; then
                _status="success"
            else
                _status="fail"
            fi

            ./script.sh setBuildStatus -b $GOODSH_BUILD_BRANCH -c $GOODSH_BUILD_COMMIT_SHA1 -v $GOODSH_BUILD_VERSION -i $GOODSH_BUILD_ID -s $_status

            git add build.history
            git commit -m "increase history: -b $GOODSH_BUILD_BRANCH -c $GOODSH_BUILD_COMMIT_SHA1 -v $GOODSH_BUILD_VERSION -i $GOODSH_BUILD_ID -s $_status"
            git push

            cd ..
            git checkout android/app/src/main/AndroidManifest.xml ios/goodshmob/Info.plist
  android:
    before_run:
    - _prepare
    - _prepare-android
    - _build-android
    - _deploy-android
    - _add_version
    steps:
    - slack@2.6.3:
        inputs:
        - message: 'Build SUCCESSFUL: [android] [$BITRISE_GIT_BRANCH]: $GIT_CLONE_COMMIT_MESSAGE_SUBJECT'
        - message_on_error: "Ah! Something went wrong \U0001F631 logs: $BITRISE_BUILD_URL/logs.json?&download=log"
        - webhook_url: "$SLACK_WEBHOOK_URL"
  ios:
    before_run:
    - _prepare
    - _prepare-ios
    - _build-ios
    - _deploy-ios
    - _add_version
    steps:
    - slack@2.6.3:
        inputs:
        - message: 'Build SUCCESSFUL: [ios] [$BITRISE_GIT_BRANCH]: $GIT_CLONE_COMMIT_MESSAGE_SUBJECT'
        - webhook_url: "$SLACK_WEBHOOK_URL"
  build:
    before_run:
    - _prepare
    - _prepare-ios
    - _prepare-android
    - _build-android
    - _build-ios
    - _deploy-ios
    - _deploy-android
    - _add_version
    steps:
    - slack@2.6.3:
        inputs:
        - message: 'Build SUCCESSFUL: [$BITRISE_GIT_BRANCH]: $GIT_CLONE_COMMIT_MESSAGE_SUBJECT'
        - webhook_url: "$SLACK_WEBHOOK_URL"
  build_test:
    before_run:
    - _prepare
    # - _prepare-ios
    # - _prepare-android
    - _build-android
    - _build-ios
    # - _deploy-ios
    # - _deploy-android
    - _add_version
    # steps:
    # - slack@2.6.3:
    #     inputs:
    #     - message: 'Build SUCCESSFUL: [$BITRISE_GIT_BRANCH]: $GIT_CLONE_COMMIT_MESSAGE_SUBJECT'
    #     - webhook_url: "$SLACK_WEBHOOK_URL"
app:
  envs:
  - opts:
      is_expand: false
    GRADLE_BUILD_FILE_PATH: android/build.gradle
  - opts:
      is_expand: false
    HOCKEY_APP_API_TOKEN: 21bebd0454554933b41d91a90c3df9c5
  - opts:
      is_expand: false
    GRADLEW_PATH: android/gradlew
  - opts:
      is_expand: false
    CERTS_DECRYPT: x4d3$DovRq9n
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: ios/goodshmob.xcodeproj
  - opts:
      is_expand: false
    BITRISE_SCHEME: goodshmob
  - BITRISE_WORKSPACE_PATH: ios/goodshmob.xcworkspace
  - SLACK_WEBHOOK_URL: https://hooks.slack.com/services/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
trigger_map:
- push_branch: master
  workflow: build
- push_branch: preprod
  workflow: build
- push_branch: prod
  workflow: build
